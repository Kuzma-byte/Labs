#define _CRT_SECURE_NO_WARNINGS 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <locale.h>
#include <windows.h> // Для настройки кодировки в Windows

void writeToFile(const char* filename) {
    FILE* file = fopen(filename, "w");
    if (file == NULL) {
        printf("Ошибка открытия файла для записи.\n");
        exit(1);
    }

    char input[100];
    printf("Введите слова (для завершения ввода введите 'stop'):\n");

    while (1) {
        scanf("%99s", input); // Указываем ограничение в 99 символов для безопасности
        if (strcmp(input, "stop") == 0) {
            break;
        }
        fprintf(file, "%s\n", input);
    }

    fclose(file);
}

void readFromFile(const char* filename) {
    FILE* file = fopen(filename, "r");
    if (file == NULL) {
        printf("Ошибка открытия файла для чтения.\n");
        exit(1);
    }

    char word[100];
    printf("Содержимое файла:\n");
    while (fscanf(file, "%99s", word) != EOF) { // Ограничение 99 символов
        printf("%s\n", word);
    }

    fclose(file);
}

void findWordsByLength(const char* filename, int length) {
    FILE* file = fopen(filename, "r");
    if (file == NULL) {
        printf("Ошибка открытия файла для поиска.\n");
        exit(1);
    }

    char word[100];
    printf("Слова длиной %d символов:\n", length);
    while (fscanf(file, "%99s", word) != EOF) { // Ограничение 99 символов
        if (strlen(word) == length) {
            printf("%s\n", word);
        }
    }

    fclose(file);
}

int main() {
    setlocale(LC_ALL, "Russian"); // Русская локализация
    SetConsoleCP(1251); // Кодировка ввода
    SetConsoleOutputCP(1251); // Кодировка вывода

    const char* filename = "words.txt";
    writeToFile(filename);
    readFromFile(filename);

    int length;
    printf("Введите длину слов для поиска: ");
    scanf("%d", &length);
    findWordsByLength(filename, length);

    return 0;
}
